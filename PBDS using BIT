
// PBDS implementation using fenwick tree..
// By default it returns no of elements smaller than current element....if you want greater than pass x as -x.

class BIT {
    Map<Long, Integer> bitMap;

    BIT() {
        bitMap = new HashMap<>();
    }

    void update(long i, int x) {
        i = i + (long) 1e9;

        for (; i <= (long) (2e9 + 1); i += (i & -i))
            bitMap.put(i, bitMap.getOrDefault(i, 0) + x);
    }

    int retrieve(long i) {
        i = i + (long) 1e9;

        int val = 0;
        for (; i > 0; i -= (i & -i))
            val += bitMap.getOrDefault(i, 0);
        return val;
    }
}
