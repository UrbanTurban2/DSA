class DSU {

    public int[] parent;
    public int[] rank;
    DSU(int n) {
        parent=new int[n];
        rank=new int[n];
        for(int i=0;i<n;++i)
            make_set(i);
    }
    public int find_set(int v) {
        if (v == parent[v])
            return v;
        return parent[v] = find_set(parent[v]);
    }
    public void make_set(int v) {
        parent[v] = v;
        rank[v] = 0;
    }

    public void union_sets(int a, int b) {
        a = find_set(a);
        b = find_set(b);
        if (a != b) {
            if (rank[a] < rank[b])
                swap(a, b);
            parent[b] = a;
            if (rank[a] == rank[b])
                rank[a]++;
        }
    }
    public void swap(int a, int b) {
        int t=a;
        a=b;
        b=t;
    }
}
