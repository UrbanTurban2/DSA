static long[] fact=new long[200005];
    static void solve(FastScanner fs)
    {
        preComputeFact();   
        pn(ncr(10, 8));
    }
    static void preComputeFact()
    {
        fact[0]=fact[1]=1;
        for(int i=2;i<fact.length;++i)
        {
            fact[i]=(fact[i-1]*i)%MOD;
        } 
    }
    static long ncr(int n, int r)
    {
        return ((fact[n] * modInverse(fact[r]))%MOD * modInverse(fact[n-r])%MOD ) % MOD; 
    }
    static long modInverse(long n)
    {
        return power(n, MOD-2);
    }
    static long power(long x, long y)
    {
        if(y==0)
            return 1;
        long halfAns=power(x, y/2);
        long myAns=(halfAns*halfAns)%MOD;

        if((y&1)==1)
            myAns=(myAns*x)%MOD;
        return myAns;
    }
    static int MOD=(int)(1e9+7);
    